name: build(mariadb)

on:
  push:
    branches:
      - main
    paths:
      - 'mariadb/**'
  workflow_dispatch:
  schedule:
    - cron: '0 0 3 * *'

jobs:
  mariadb:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: ['mariadb']
        version: ['11.4', '11.8']
        latest_version: ['11.4']

    steps:
      - name: Checkout ${{ matrix.name }}
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version
        run: |
          echo "build=true" >> $GITHUB_ENV
          if [ ! -f "${{ matrix.name }}/${{ matrix.version }}/Dockerfile" ]; then
            echo "build=false" >> $GITHUB_ENV
            exit 0
          fi
          full_version=$(grep "ARG MARIADB_VERSION=" ${{ matrix.name }}/${{ matrix.version }}/Dockerfile | sed -n 's/.*=.*:\([0-9.]*\).*/\1/p')
          echo "full_version=${full_version}" >> $GITHUB_ENV

          version=${{ matrix.version }}
          image_tag=${version}-trixie
          full_image_tag=${full_version}-trixie

          echo "image_tag=${image_tag}" >> $GITHUB_ENV
          echo "full_image_tag=${full_image_tag}" >> $GITHUB_ENV
      
      - name: Build and push image
        if: env.build == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.name }}/${{ matrix.version }}/
          platforms: linux/loong64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.image_tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.full_image_tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.full_version }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prepare configuration
        run: |
          wget -qO- https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_Linux_x86_64.tar.gz | sudo tar -xzf - -C /usr/local/bin/ crane
          sudo chmod +x /usr/local/bin/crane
          sudo chown root:root /usr/local/bin/crane

      - name: Pull and Push Images
        run: |
          if [ "${{ matrix.version }}" = "${{ matrix.latest_version }}" ]; then
            crane cp ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:latest
          fi
          if [ "${{ matrix.version }}" = "11.8" ]; then
            crane cp ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.image_tag }}-rc
            crane cp ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.full_image_tag }}-rc
            crane cp ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }}-rc
            crane cp ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.full_version }}-rc
          fi